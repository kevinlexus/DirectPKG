create table SCOTT.OPER
(
  oper         CHAR(3) not null,
  naim         CHAR(25),
  tpl          CHAR(1) default 9 not null,
  oigu         CHAR(4) default 1001 not null,
  svoi         CHAR(1),
  post         CHAR(2),
  fk_org       NUMBER,
  fk_usl       CHAR(3),
  fk_usl_chk   CHAR(3),
  iscounter    NUMBER,
  cash_oper_tp NUMBER default 0
)
tablespace USERS
  pctfree 1
  initrans 1
  maxtrans 255
  storage
  (
    initial 576K
    next 1M
    minextents 1
    maxextents unlimited
  );
comment on table SCOTT.OPER
  is 'Справочник операций';
comment on column SCOTT.OPER.fk_org
  is 'Организация, для которой доступна данная операция на ввод платежа';
comment on column SCOTT.OPER.fk_usl
  is 'Эксклюзиваная услуга по операции, куда распределится вся оплата';
comment on column SCOTT.OPER.fk_usl_chk
  is 'Операция будет выводиться только при наличии данной услуги в начислении';
comment on column SCOTT.OPER.iscounter
  is 'Выводить ли показания счетчика по операции (1) либо ввод суммы (2) либо работа без счетчика (null, 0)';
comment on column SCOTT.OPER.cash_oper_tp
  is 'Тип операции для фискального регистратора (0-наличка, 1-безнал)';
create index SCOTT.OPER_I_OIGU on SCOTT.OPER (OIGU)
  tablespace USERS
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  )
  nologging;
alter table SCOTT.OPER
  add constraint OPER_P_KEY1 primary key (OPER)
  using index 
  tablespace USERS
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
alter table SCOTT.OPER
  add constraint OPER_FK_ORG foreign key (FK_ORG)
  references SCOTT.T_ORG (ID);
alter table SCOTT.OPER
  add constraint OPER_F_FK_USL foreign key (FK_USL)
  references SCOTT.USL (USL);
alter table SCOTT.OPER
  add constraint OPER_F_FK_USL_CHK foreign key (FK_USL_CHK)
  references SCOTT.USL (USL);

